import numpy as np
from matplotlib import pyplot as plt
from PIL import Image
def blurgb(bluramount,kernsize,picture_name):
    #makes the origional
    img = Image.open(picture_name).convert('RGB')
    img_matrix = np.array(img) / 255.0
    h, w,c = img_matrix.shape
    crop_size = min(h, w)
    start_h = (h - crop_size) // 2
    start_w = (w - crop_size) // 2
    col = img_matrix[start_h:start_h + crop_size, start_w:start_w + crop_size, :]

    #makes the kernel
    t_value = bluramount
    def g(t, x, y):
        return (1 / (4 * np.pi * t)) * np.exp(-(x**2 + y**2) / (4 * t))
    halfkern = kernsize // 2
    datagrid = np.zeros((kernsize,kernsize),dtype='object')
    dataval = np.zeros((kernsize,kernsize),dtype='float')
    for ix, i in enumerate(range(-halfkern+1, halfkern)):
        for iy, j in enumerate(reversed(range(-halfkern+1, halfkern))):
            datagrid[iy,ix] = i,j
            dataval[iy,ix]= round(g(t_value, i, j),20)
    dataval /= dataval.sum()

    #implementation
    new = np.zeros((crop_size, crop_size,3))
    for t in range(c):
        padded = np.pad(col[:,:,t], kernsize // 2, mode='edge')
        for i in range(crop_size):
            for j in range(crop_size):
                region = padded[i:i + kernsize, j:j + kernsize]
                new[i, j,t] = np.sum(region * dataval)
    #readjust and print
    plt.imshow(new)
    plt.title(bluramount)
    plt.axis('off')
    plt.show()
blurgb(100,23, 'ironman.jpg')
